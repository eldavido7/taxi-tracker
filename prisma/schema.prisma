generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Driver {
  id        String     @id @default(cuid())
  name      String
  phone     String
  email     String
  sessions  Session[]
  trips     Trip[]     @relation("DriverTrips")
  createdAt DateTime   @default(now())
}

model Location {
  id        String   @id @default(cuid())
  sessionId String   @unique
  latitude  Float
  longitude Float
  updatedAt DateTime @updatedAt
  session   Session  @relation(fields: [sessionId], references: [id])
}

model User {
  id          String    @id @default(cuid())
  name        String
  email       String    @unique
  password    String    // hashed
  sessions    Session[]
  trips       Trip[]    @relation("UserTrips")
  createdAt   DateTime  @default(now())
  refreshToken String?  // To persist sessions
}

enum SessionStatus {
  active
  ended
}

model Session {
  id          String   @id @default(cuid())
  userId      String
  driverId    String
  origin      String
  destination String
  destinationName String?
  status      SessionStatus
  startedAt   DateTime @default(now())
  endedAt     DateTime?
  distance    Float?   // optional: in kilometers
  duration    String?     // optional: in seconds
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  location    Location?
  user        User     @relation(fields: [userId], references: [id])
  driver      Driver   @relation(fields: [driverId], references: [id])
}

model Trip {
  id          String    @id @default(cuid())
  userId      String
  driverId    String
  startLat    Float
  startLng    Float
  endLat      Float
  endLng      Float
  startedAt   DateTime  @default(now())
  endedAt     DateTime?
  isActive    Boolean   @default(true)

  user        User      @relation(fields: [userId], references: [id], name: "UserTrips")
  driver      Driver    @relation(fields: [driverId], references: [id], name: "DriverTrips")
}